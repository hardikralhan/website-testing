<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Site-wide Audit Report</title>
  <style>
    body { font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; margin: 40px; }
    .container { max-width: 800px; margin: auto; }
    h1 { font-size: 24px; margin-bottom: 10px; text-align: center; }
    h2 { font-size: 20px; margin-top: 30px; margin-bottom: 10px; border-bottom: 1px solid #ddd; padding-bottom: 5px; }
    table { width: 100%; border-collapse: collapse; margin-top: 10px; }
    th, td { border: 1px solid #ccc; padding: 8px; text-align: left; font-size: 14px; }
    ul { list-style-type: disc; margin-left: 20px; }
    li { margin-bottom: 5px; font-size: 14px; }
    .score { font-weight: bold; color: #007bff; }
    .error { color: #c00; }
    .section { page-break-after: always; }
    .section:last-child { page-break-after: auto; }
  </style>
</head>
<body>
  <div class="container">
    <% for (const link of Object.keys(allResults)) { 
         const results = allResults[link]; %>

      <div class="section">
        <h1>Audit Report for <%= link %></h1>

        <!-- Accessibility -->
        <h2>Accessibility</h2>
        <% if (results.accessibility.error) { %>
          <p class="error">Error: <%= results.accessibility.error %></p>
        <% } else if (results.accessibility && results.accessibility.violations) { %>
          <% if (results.accessibility.violations.length) { %>
            <h3>Violations</h3>
            <table>
              <thead>
                <tr><th>ID</th><th>Description</th><th>Impact</th><th>WCAG</th><th>Remediation</th></tr>
              </thead>
              <tbody>
                <% results.accessibility.violations.forEach(v => { %>
                  <tr>
                    <td><%= v.id %></td>
                    <td><%= v.description %></td>
                    <td><%= v.impact || 'N/A' %></td>
                    <td><%= v.wcag.join(', ') %></td>
                    <td><%= v.remediation || 'Refer to help URL' %></td>
                  </tr>
                <% }) %>
              </tbody>
            </table>
          <% } else { %>
            <p>No accessibility violations detected.</p>
          <% } %>
        <% } else { %>
          <p class="error">Accessibility data unavailable.</p>
        <% } %>

        <!-- Grammar -->
        <h2>Grammar</h2>
        <% if (results.grammar.error) { %>
          <p class="error">Error: <%= results.grammar.error %></p>
        <% } else if (results.grammar.issues && results.grammar.issues.length) { %>
          <table>
            <thead><tr><th>Context</th><th>Suggestion</th><th>Message</th></tr></thead>
            <tbody>
              <% results.grammar.issues.forEach(issue => { %>
                <tr>
                  <td><%= issue.context %></td>
                  <td><%= issue.suggestion %></td>
                  <td><%= issue.message %></td>
                </tr>
              <% }) %>
            </tbody>
          </table>
        <% } else { %>
          <p>No grammar issues detected.</p>
        <% } %>

        <!-- SEO -->
        <h2>SEO</h2>
        <% if (results.seo.error) { %>
          <p class="error">Error: <%= results.seo.error %></p>
        <% } else if (results.seo) { %>
          <h3>Meta</h3>
          <ul>
            <li><strong>Title:</strong> <%= results.seo.meta.title %></li>
            <li><strong>Description:</strong> <%= results.seo.meta.description %></li>
          </ul>
          <h3>Headings</h3>
          <ul>
            <% for (const k of Object.keys(results.seo.headings).filter(k => k!=='structureIssues')) { %>
              <li><%= k.toUpperCase() %>: <%= results.seo.headings[k].count %></li>
            <% } %>
          </ul>
          <h3>Images</h3>
          <ul>
            <li>Total: <%= results.seo.images.total %></li>
            <li>Missing Alt: <%= results.seo.images.missingAlt.length %></li>
          </ul>
          <h3>Links</h3>
          <ul>
            <li>Total: <%= results.seo.links.total %></li>
            <li>Broken: <%= results.seo.links.broken.length %></li>
          </ul>
        <% } else { %>
          <p class="error">SEO data unavailable.</p>
        <% } %>

        <!-- Performance -->
        <h2>Performance</h2>
        <% if (results.performance.error) { %>
          <p class="error">Error: <%= results.performance.error %></p>
        <% } else if (results.performance) { %>
          <p class="score">
            Score: <%= results.performance.performanceScore.score %>
            (<%= results.performance.performanceScore.category %>)
          </p>
          <h3>Load Times</h3>
          <ul>
            <li>Interactive: <%= results.performance.pageLoadTime.interactive %></li>
            <li>FCP: <%= results.performance.pageLoadTime.firstContentfulPaint %></li>
          </ul>
          <h3>HTTP Requests</h3>
          <p><%= results.performance.httpRequests.description %></p>
          <h3>Render-Blocking</h3>
          <p><%= results.performance.renderBlocking.description %></p>
          <h3>Caching</h3>
          <p><%= results.performance.caching.description %></p>
        <% } else { %>
          <p class="error">Performance data unavailable.</p>
        <% } %>

        <!-- UI -->
        <h2>UI</h2>
        <% if (results.ui.error) { %>
          <p class="error">Error: <%= results.ui.error %></p>
        <% } else if (results.ui.report) { %>
          <% ['inconsistentFonts','inconsistentColors','inconsistentButtonStyles','poorWhitespace']
              .forEach(section => { 
                const items = results.ui.report[section] || [];
                const title = { 
                  inconsistentFonts: 'Fonts',
                  inconsistentColors: 'Colors',
                  inconsistentButtonStyles: 'Button Styles',
                  poorWhitespace: 'Whitespace'
                }[section];
          %>
            <h3><%= title %></h3>
            <% if (items.length) { %>
              <ul>
                <% items.forEach(i => { %>
                  <li><%= i.text || i.element || i.button || i.section %> â€” <%= i.description %></li>
                <% }) %>
              </ul>
            <% } else { %>
              <p>No <%= title.toLowerCase() %> issues.</p>
            <% } %>
          <% }) %>
        <% } else { %>
          <p class="error">UI data unavailable.</p>
        <% } %>

        <!-- Mobile -->
        <h2>Mobile</h2>
        <% if (results.mobile.error) { %>
          <p class="error">Error: <%= results.mobile.error %></p>
        <% } else if (results.mobile) { %>
          <% [
            ['responsivenessIssues','Responsiveness'],
            ['overlappingElements','Overlaps'],
            ['cutOffContent','Cut-Off Content'],
            ['tapTargetIssues','Tap Targets']
          ].forEach(([key,title]) => {
            const arr = results.mobile[key] || [];
          %>
            <h3><%= title %></h3>
            <% if (arr.length) { %>
              <ul>
                <% arr.forEach(issue => { %>
                  <li><%= issue.description %> (Location: <%= issue.location %>)</li>
                <% }) %>
              </ul>
            <% } else { %>
              <p>No <%= title.toLowerCase() %> issues.</p>
            <% } %>
          <% }) %>
        <% } else { %>
          <p class="error">Mobile data unavailable.</p>
        <% } %>

      </div>
    <% } %>
  </div>
</body>
</html>
